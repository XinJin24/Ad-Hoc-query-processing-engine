
import os
import psycopg2
import psycopg2.extras
import tabulate
from prettytable import PrettyTable
from _H_class_generated import H
import collections
from dotenv import load_dotenv

# DO NOT EDIT THIS FILE, IT IS GENERATED BY generator.py

def query():
    load_dotenv()

    user = os.getenv('USER')
    password = os.getenv('PASSWORD')
    dbname = os.getenv('DBNAME')

    conn = psycopg2.connect("dbname="+dbname+" user="+user+" password="+password,
                            cursor_factory=psycopg2.extras.DictCursor)

    cur = conn.cursor()
    cur.execute("SELECT * FROM sales")
    rows = cur.fetchall()
    
    mf_structure = collections.defaultdict(H)
    for row in rows:
        group_cust = row[0]
        if row[4] == 2017:
            if not (mf_structure[(group_cust)]['cust']):
                mf_structure[(group_cust)]['cust'] = group_cust
            mf_structure[(group_cust)]['1_sum_quant'] += row[6]
        if row[4] == 2018:
            if not (mf_structure[(group_cust)]['cust']):
                mf_structure[(group_cust)]['cust'] = group_cust
            mf_structure[(group_cust)]['2_sum_quant'] += row[6]
        if row[4] == 2019:
            if not (mf_structure[(group_cust)]['cust']):
                mf_structure[(group_cust)]['cust'] = group_cust
            mf_structure[(group_cust)]['3_sum_quant'] += row[6]
    # second scan
    mf_structure_0 = collections.defaultdict(H)
    for row in rows:
        group_cust = row[0]
        if row[6] > mf_structure[((group_cust))]['1_sum_quant']:
            if not (mf_structure_0[(group_cust)]['cust']):
                mf_structure_0[(group_cust)]['cust'] = group_cust
            mf_structure_0[(group_cust)]['1_sum_quant'] += row[6]
    for row in rows:
        group_cust = row[0]
        if row[6] > mf_structure[((group_cust))]['2_sum_quant']:
            if not (mf_structure_0[(group_cust)]['cust']):
                mf_structure_0[(group_cust)]['cust'] = group_cust
            mf_structure_0[(group_cust)]['2_sum_quant'] += row[6]
    for row in rows:
        group_cust = row[0]
        if row[6] > mf_structure[((group_cust))]['3_sum_quant']:
            if not (mf_structure_0[(group_cust)]['cust']):
                mf_structure_0[(group_cust)]['cust'] = group_cust
            mf_structure_0[(group_cust)]['3_sum_quant'] += row[6]
    

    for key, updated_h_object in mf_structure_0.items():
        if key in mf_structure:
            original_h_object = mf_structure[key]
            for attr, value in updated_h_object.attributes.items():
                if value != 0:
                    original_h_object.attributes[attr] = value
        else:
            mf_structure[key] = updated_h_object
        
    x = PrettyTable()
    x.field_names = ['cust','1_sum_quant','2_sum_quant','3_sum_quant']
    for val in mf_structure.values():
            row = [val[key] for key in x.field_names if key in val]
            x.add_row(row)
    print(x)


    _global = []
    return tabulate.tabulate(_global,
                        headers="keys", tablefmt="psql")

def main():
    print(query())

if "__main__" == __name__:
    main()
    